import React, { useState, useEffect, useContext } from "react";

import { ReactComponent as IconSearch } from "../icons/ico-search.svg";
import axios from "axios";
import "./../Settings/Settings.css";

// import Settings_section_edit_mssp_config_json_dashboards_paths from "./Settings_section_edit_mssp_config_json_dashboards_paths.jsx";
import { Search_comp, Search_comp_for_logs } from "../Features/Search_comp.jsx";

import { PopUp_Under_Construction } from "../PopUp_Smart.js";

import GeneralContext from "../../Context.js";
import { ShowRuleModal } from "./ShowRule.jsx";
import AI_Vulnerability_Menu from "./AI_Vulnerability_Menu.jsx";
import Settings_section_logs from "../Settings/Settings_section_logs.jsx";
import { fix_path } from "../Dashboards/functions_for_dashboards.js";

function AI_Vulnerability({
  show_SideBar,
  set_show_SideBar,
  set_unseen_alert_number,
  set_visblePage,
  isMainProcessWork,
  set_isMainProcessWork,
}) {
  // set_visblePage("AI_Vulnerability");

  const { all_Tools, mssp_config_json, front_IP, front_URL } =
    useContext(GeneralContext);
  const [Preview_This_comp, set_Preview_This_comp] = useState("Prompt");
  const [Preview_This_in_menu, set_Preview_This_in_menu] = useState("Prompt");
  const [show_nested, set_show_nested] = useState([]);

  const [PopUp_Under_Construction__show, set_PopUp_Under_Construction__show] =
    useState(false);
  const [PopUp_Under_Construction__txt, set_PopUp_Under_Construction__txt] =
    useState({
      HeadLine: "Coming Soon!",
      paragraph:
        "We are working on creating this section. Stay tuned for updates as we finalize the details.",
      buttonTitle: "Close",
    });

  const [dashboard_URL, set_dashboard_URL] = useState("");

  //  show sidebar in this page
  // useEffect(() => {
  //   if (show_SideBar === false) {
  //     set_show_SideBar(true);
  //   }
  // }, []);

  const handle_Click_Btn = (value, is_nasted, show_nested, fater_value) => {
    // console.log("Preview_This_comp" , Preview_This_comp);
    // console.log("value        fater_value"    , fater_value);
    // console.log("value             value"    , value);
    // console.log("value        22222"    , value != fater_value);

    if (is_nasted === false) {
      if (value != fater_value) {
        console.log("he has a father");
        console.log("i am your fater ", fater_value);
        set_Preview_This_comp(value);
        set_Preview_This_in_menu(fater_value);
        return;
      } else {
        set_show_nested((prev) => [...prev, value]);
        set_Preview_This_comp(value);
        set_Preview_This_in_menu(value);
        return;
      }
    } else {
      console.log("nested");
      if (show_nested.includes(value)) {
        set_show_nested((prev) => [...prev.filter((x) => x != value)]);
      } else {
        set_show_nested((prev) => [...prev, value]);
      }
    }
  };

  useEffect(() => {
    if (!mssp_config_json) {
      return;
    }
    const moduleLinks = Array.isArray(mssp_config_json?.moduleLinks)
      ? mssp_config_json.moduleLinks
      : [];
    const threatHuntingURL = moduleLinks.find(
      (link) => link.toolName === "AI vulnerability Dashboard"
    )?.toolURL;
    const fixed_path = fix_path(threatHuntingURL, front_IP, front_URL);
    set_dashboard_URL(fixed_path);
  }, [mssp_config_json]);
  return (
    <>
      {PopUp_Under_Construction__show && (
        <PopUp_Under_Construction
          popUp_show={PopUp_Under_Construction__show}
          set_popUp_show={set_PopUp_Under_Construction__show}
          HeadLine={PopUp_Under_Construction__txt.HeadLine}
          paragraph={PopUp_Under_Construction__txt.paragraph}
          buttonTitle={PopUp_Under_Construction__txt.buttonTitle}
        />
      )}

      <div>
        {/* <div className="top-of-page">
          <div className="top-of-page-left mb-a">
            <p className="font-type-h3">AI Vulnerability</p>
          </div>
          <div className="top-of-page-center"></div>

          <div
            className="top-of-page-right"
            onClick={() => set_PopUp_Under_Construction__show(true)}
          ></div>
        </div>

        <div className="resource-group-top-boxes mb-c"></div> */}

        <div className="mb-c">
          <AI_Vulnerability_Menu
            Preview_This_in_menu={Preview_This_in_menu}
            Preview_This_comp={Preview_This_comp}
            show_nested={show_nested}
            set_show_nested={set_show_nested}
            handle_Click_Btn={handle_Click_Btn}
          />{" "}
        </div>

        <div style={{ display: "flex", flexDirection: "column", gap: "45px" }}>
          {/* {Preview_This_comp == "Dashboard" && (
            <iframe
              src={dashboard_URL}
              height="700vh"
              width="100%"
              className="kibana-iframe"
            ></iframe>
          )} */}
          {Preview_This_comp == "Prompt" && (
            <Settings_section_logs
              usethis={"log_Prompt"}
              fileName={"cve_managment_prompt.log"}
              headline={"Prompt"}
              subline={""}
            />
          )}
          {Preview_This_comp == "Nuclie AI" && (
            <ShowRuleModal RuleType={"Nuclei"} />
          )}
          {Preview_This_comp == "Yara AI" && (
            <ShowRuleModal RuleType={"Yara"} />
          )}
          {Preview_This_comp == "Sigma AI" && (
            <ShowRuleModal RuleType={"Sigma"} />
          )}
          {Preview_This_comp == "Mitigation" && (
            <ShowRuleModal RuleType={"Mitigation"} />
          )}
          {Preview_This_comp == "Exploit" && (
            <ShowRuleModal RuleType={"Exploit"} />
          )}
        </div>
      </div>
    </>
  );
}

export default AI_Vulnerability;
